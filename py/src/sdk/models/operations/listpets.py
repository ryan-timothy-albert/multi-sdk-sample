"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import error as components_error
from ...models.components import httpmetadata as components_httpmetadata
from ...models.components import pet as components_pet
from dataclasses_json import Undefined, dataclass_json
from typing import Dict, List, Optional


@dataclasses.dataclass
class ListPetsRequest:
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""How many items to return at one time (max 100)"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPetsResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    headers: Dict[str, List[str]] = dataclasses.field()
    pets: Optional[List[components_pet.Pet]] = dataclasses.field(default=None)
    r"""A paged array of pets"""
    error: Optional[components_error.Error] = dataclasses.field(default=None)
    r"""unexpected error"""
    

